@using Microsoft.AspNetCore.Identity
@using TribalSvcPortal.ViewModels
@using TribalSvcPortal.AppLogic.BusinessLogicLayer
@model TribalSvcPortal.ViewModels.OpenDumpViewModels.OpenDumpViewModel

@if (Model != null)
{
    @using (Html.BeginForm("FieldAssessmentEdit", "OpenDump", FormMethod.Post, new { @id = "norepostform", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.DUMP_ASSESSMENTS_IDX)
        @Html.HiddenFor(model => model.oPreFieldViewModel.TPrtSites.SiteIdx)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-12" style="margin-top: 8px;">
                <div>
                    <label class="col-sm-1 control-label" style="margin-top:8px;">
                        Site Name
                    </label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.oPreFieldViewModel.TPrtSites.SiteName, new { @class = "form-control", @placeholder = "", @maxlength = "100", required = "required" })
                    </div>
                </div>
                <div>
                    <label class="col-sm-1 control-label" style="margin-top:8px;">
                        Organization
                    </label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.oPreFieldViewModel.TPrtSites.OrgId, Model.oPreFieldViewModel.OrgList, "", new { @class = "form-control", required = "required" })
                    </div>
                </div>
                <div>
                    <label class="col-sm-1 control-label" style="margin-top:8px;">
                        EPA ID
                    </label>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.oPreFieldViewModel.TPrtSites.EpaId, new { @class = "form-control", @placeholder = "", @maxlength = "50" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="margin-top:10px;">
            <div class="col-sm-12">
                <div class="col-md-4 no-padding">
                    <label class="col-sm-3 control-label" style="margin-top:8px;">
                        Assessment
                    </label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(model => model.oFieldAssessmentViewModel.selDumpAssessmentIdx, Model.oFieldAssessmentViewModel.AssessmentDropDownList, null, new { @class = "form-control", @onchange = "GetAssessment(this.value)" })
                    </div>
                </div>
                <div class="col-md-6">
                    @if (Model.oPreFieldViewModel.TPrtSites != null)
                    {

                        <div class="form-group">
                            <a href="@Url.Action("FieldAssessments", "OpenDump", new { SiteIdx = Model.oPreFieldViewModel.TPrtSites.SiteIdx })" class="btn btn-primary"
                               style="color: #fff;background-color: #5cb85c;border-color: #4cae4c;border-radius: 4px !important;">Add New Assessment</a>
                        </div>
                    }
                </div>
            </div>
        </div>

        @if (Model.oFieldAssessmentViewModel.selDumpAssessmentIdx.ToString() != "98567684-a5d5-4742-ac6d-1dd5080f76a7")
        {

            <section class="panel panel-default" style="margin-top:5px;">
                <div class="panel-heading">
                    Assessment Details
                    <div class="panel-tools">
                        <a class="btn btn-xs panel-collapse collapses" href="#">
                        </a>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="col-lg-12 col-md-12 col-sm-12 no-padding">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Date of Assessment</label>
                                    @Html.TextBoxFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.ASSESSMENT_DT, "{0:MM-dd-yyyy}", new { @id = "dateAssessment", @class = "form-control datepicker", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Assessed By</label>
                                    @Html.TextBoxFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.ASSESSED_BY, new { @class = "form-control", @placeholder = "", @maxlength = "450" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Assessment Type</label>
                                    @Html.DropDownListFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.ASSESSMENT_TYPE_IDX, Model.oFieldAssessmentViewModel.AssessmentTypeList, "", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-2" style="margin-top:22px;">
                                <div class="form-group">
                                    @Html.CheckBoxFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.ACTIVE_SITE_IND, new { @checked = "checked" })<label>Active Site</label>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Site Description</label>
                                    @Html.TextAreaFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.SITE_DESCRIPTION, new { @class = "form-control", @placeholder = "" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Observations / Notes</label>
                                    @Html.TextAreaFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.ASSESSMENT_NOTES, new { @class = "form-control", @placeholder = "" })
                                </div>
                            </div>
                        </div>
                        @if (Model.oFieldAssessmentViewModel.TOdDumpAssessments != null)
                        {
                            @*<div id="divphotosfiles">*@
                            <div class="row">
                                <div class="col-sm-1" style="text-align:left;">
                                    <label><b>Photos</b></label>
                                </div>
                                <div class="col-sm-10" style="text-align:left;">
                                    <p>
                                        <a id="add-it" href="#modal-formPhoto" data-toggle="modal" class="add-it btn btn-rounded  btn-rounded btn-success">
                                            <i class="glyphicon glyphicon-plus"></i> Add More
                                        </a>
                                    </p>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 no-padding" style="width: 100%;overflow-y:auto;white-space: nowrap;">

                                    <div class="row">
                                        @if (Model.oFieldAssessmentViewModel.filesPhoto_existing != null && Model.oFieldAssessmentViewModel.filesPhoto_existing.Count > 0)
                                        {
                                            <div class="postuploadedfilesholder clearfix">
                                                @*<p>Attached Files</p>*@
                                                @{
                                                    int i = 0;
                                                }
                                                <ul>
                                                    @foreach (var file in Model.oFieldAssessmentViewModel.filesPhoto_existing.OrderByDescending(o => o.CreateDt))
                                                    {

                                                        <li style="display: inline-block;padding: 4px 1%; width: 20%;">
                                                            @Html.HiddenFor(modelItem => Model.oFieldAssessmentViewModel.filesPhoto_existing[i].DocIdx)

                                                            <a class="fileupload" href="@Url.Action("FileDownload", "OpenDump", new { id = Model.oFieldAssessmentViewModel.filesPhoto_existing[i].DocIdx })">
                                                                @if (Utils.FileIsImage(Model.oFieldAssessmentViewModel.filesPhoto_existing[i].DocName))
                                                                {
                                                                    <span class="glyphicon glyphicon-picture" aria-hidden="true"></span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
                                                                }
                                                            </a>
                                                            <a href="@Url.Action("FileDelete", "OpenDump", new { id = Model.oFieldAssessmentViewModel.filesPhoto_existing[i].DocIdx })" class="deleteupload" title="Delete">
                                                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                            </a>

                                                            <a href="#" class="btn btn-rounded btn-xs activity" title="Edit">
                                                                <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i>
                                                            </a>
                                                            <div class="postedfilename" style="overflow-wrap: break-word; word-wrap: break-word;white-space: normal !important;">
                                                                @Html.DisplayFor(modelItem => Model.oFieldAssessmentViewModel.filesPhoto_existing[i].DocName)

                                                            </div>
                                                            <div id="divPhotoHideOnEdit" style="overflow-wrap: break-word; word-wrap: break-word;white-space: normal !important;">
                                                                @Html.DisplayFor(modelItem => Model.oFieldAssessmentViewModel.filesPhoto_existing[i].DocComment)
                                                            </div>
                                                            <div id="divPhotoShowOnEdit" style="display:none;">
                                                                @Html.EditorFor(modelItem => Model.oFieldAssessmentViewModel.filesPhoto_existing[i].DocComment, new { @class = "form-control", @maxlength = "200" })
                                                            </div>

                                                        </li>

                                                        i++;
                                                    }
                                                </ul>
                                            </div>
                                                    }
                                    </div>
                                </div>
                            </div>

                            <div class="row" style="margin-top:10px;">
                                <div class="col-sm-1" style="text-align:left;">
                                    <label><b>Files</b></label>
                                </div>
                                <div class="col-sm-10" style="text-align:left;">
                                    <p>
                                        <a id="add-it" href="#modal-formFile" data-toggle="modal" class="add-it btn btn-rounded  btn-rounded btn-success">
                                            <i class="glyphicon glyphicon-plus"></i> Add More
                                        </a>
                                    </p>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 no-padding" style="width: 100%;overflow-y:auto;white-space: nowrap;">
                                    <div class="row">
                                        @if (Model.oFieldAssessmentViewModel.files_existing != null && Model.oFieldAssessmentViewModel.files_existing.Count > 0)
                                        {
                                            <div class="postuploadedfilesholder clearfix">
                                                @*<p>Attached Files</p>*@
                                                @{
                                                    int i = 0;
                                                }
                                                <ul>
                                                    @foreach (var file in Model.oFieldAssessmentViewModel.files_existing.OrderByDescending(o => o.CreateDt))
                                                    {

                                                        <li style="display: inline-block;padding: 4px 1%; width: 20%;">
                                                            @Html.HiddenFor(modelItem => Model.oFieldAssessmentViewModel.files_existing[i].DocIdx)

                                                            <a class="fileupload" href="@Url.Action("FileDownload", "OpenDump", new { id = Model.oFieldAssessmentViewModel.files_existing[i].DocIdx })">
                                                                @if (Utils.FileIsImage(Model.oFieldAssessmentViewModel.files_existing[i].DocName))
                                                                {
                                                                    <span class="glyphicon glyphicon-picture" aria-hidden="true"></span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
                                                                }
                                                            </a>
                                                            <a href="@Url.Action("FileDelete", "OpenDump", new { id = Model.oFieldAssessmentViewModel.files_existing[i].DocIdx, SiteIdx = Model.oPreFieldViewModel.TPrtSites.SiteIdx })" class="deleteupload" title="Delete">
                                                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                            </a>

                                                            <a href="#" class="btn btn-rounded btn-xs descinfo" title="Edit">
                                                                <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i>
                                                            </a>
                                                            <div class="postedfilename" style="overflow-wrap: break-word; word-wrap: break-word;white-space: normal !important;">
                                                                @Html.DisplayFor(modelItem => Model.oFieldAssessmentViewModel.files_existing[i].DocName)

                                                            </div>
                                                            <div id="divHideOnEdit" style="overflow-wrap: break-word; word-wrap: break-word;white-space: normal !important;">
                                                                @Html.DisplayFor(modelItem => Model.oFieldAssessmentViewModel.files_existing[i].DocComment)
                                                            </div>
                                                            <div id="divShowOnEdit" style="display:none;">
                                                                @Html.EditorFor(modelItem => Model.oFieldAssessmentViewModel.files_existing[i].DocComment, new { @class = "form-control", @maxlength = "200" })
                                                            </div>

                                                        </li>

                                                        i++;
                                                    }
                                                </ul>
                                            </div>
                                                    }
                                    </div>
                                </div>
                            </div>
                         }
                            @*</div>*@
                            <div class="row">
                                <div class="col-md-12">
                                    <button type="submit" name="submitButton" value="Save" class="btn btn-primary">Save</button>
                                </div>
                            </div>
                        </div>
                </div>
            </section>


        }
        else
        {
            <div class="tab-content">
                <div class="tab-pane in active" id="tabList">
                    <div class="table-responsive">
                        <table class="table table-striped m-b-none" data-ride="datatables">
                            <thead>
                                <tr class="thead-inverse">
                                    <th style="min-width:70px">
                                    </th>
                                    <th>Date of Assessment</th>
                                    <th>Assessed by</th>
                                    <th>Observation/Notes</th>
                                </tr>
                            </thead>

                            @if (Model.oFieldAssessmentViewModel.TOdDumpAssessmentsGridList != null)
                            {
                                @foreach (var item in Model.oFieldAssessmentViewModel.TOdDumpAssessmentsGridList)
                                {
                                    <tr>
                                        <td style="min-width:65px">

                                            <a href="@Url.Action("FieldAssessments", "OpenDump", new { AssessmentIdx = item.DUMP_ASSESSMENTS_IDX, SiteIdx = item.SITE_IDX })" class="btn btn-rounded btn-xs btn-info">
                                                <i class="glyphicon glyphicon-pencil"></i>
                                            </a>
                                            <div class="delete-section" style="display:inline">
                                                <a class=" btn btn-rounded btn-xs btn-danger delete-link"><i class="glyphicon glyphicon-remove"></i></a>
                                                <div class="btn btn-rounded btn-xs btn-warning delete-confirm" style="display:none" data-delete-id="@item.DUMP_ASSESSMENTS_IDX" data-delete-p="/OpenDump/FieldAssessmentDelete"><b>Confirm Delete</b></div>
                                            </div>
                                            <a href="@Url.Action("IHSReport", "OpenDump", new { id = item.DUMP_ASSESSMENTS_IDX })" title="IHS Dump Survey Form" class="btn btn-rounded btn-xs btn-beige">
                                                <i class="glyphicon glyphicon-file"></i>
                                            </a>
                                        </td>
                                        <td>
                                            @Convert.ToDateTime(item.ASSESSMENT_DT).ToString("MM-dd-yyyy")
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ASSESSED_BY)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ASSESSMENT_NOTES)
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                </div>
            </div>

        }
    }
}

<!-- START MODAL FORM  -->
<div class="modal fade" id="modal-formPhoto" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        @using (Html.BeginForm("PhotoUpload", "OpenDump", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.oPreFieldViewModel.TPrtSites.SiteIdx)
            @Html.HiddenFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.DUMP_ASSESSMENTS_IDX)
            @Html.HiddenFor(model => model.oPreFieldViewModel.TPrtSites.OrgId)
            @Html.HiddenFor(model => model.oFieldAssessmentViewModel.selDumpAssessmentIdx)
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                    <h3 class="modal-tital">Add Photos</h3>
                </div>
                <div class="modal-header">
                    <div class="form-group">
                        @Html.LabelFor(x => x.oFieldAssessmentViewModel.filesPhoto)
                        <div class="input-group">
                            <label class="input-group-btn">
                                <span class="btn btn-primary btn btn-default btn-file">
                                    @*Browse… <input type="file" style="display: none;" name="files" id="files">*@
                                    @Html.EditorFor(model => model.oFieldAssessmentViewModel.filesPhoto, new { htmlAttributes = new { @id = "filesPhoto", @class = "form-control", @type = "file" } })
                                </span>
                            </label>
                            @*<input id="filename1" type="text" class="form-control" readonly="">*@
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        @Html.TextBoxFor(model => model.oFieldAssessmentViewModel.FilePhotoDescription, new { @class = "form-control", @maxlength = "200" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="picLoc" type="submit" class="btn btn-sm btn-primary">Save</button>
                    <button type="submit" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        }
    </div>

</div>

<div class="modal fade" id="modal-formFile" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        @using (Html.BeginForm("DocUpload", "OpenDump", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.oPreFieldViewModel.TPrtSites.SiteIdx)
            @Html.HiddenFor(model => model.oFieldAssessmentViewModel.TOdDumpAssessments.DUMP_ASSESSMENTS_IDX)
            @Html.HiddenFor(model => model.oPreFieldViewModel.TPrtSites.OrgId)
            @Html.HiddenFor(model => model.oFieldAssessmentViewModel.selDumpAssessmentIdx)
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">x</button>
                    <h3 class="modal-tital">Add Files</h3>
                </div>
                <div class="modal-header">
                    <div class="form-group">
                        @Html.LabelFor(x => x.oFieldAssessmentViewModel.files)
                        <div class="input-group">
                            <label class="input-group-btn">
                                <span class="btn btn-primary btn btn-default btn-file">
                                    @Html.EditorFor(model => model.oFieldAssessmentViewModel.files, new { htmlAttributes = new { @id = "files", @class = "form-control", @type = "file" } })
                                </span>
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        @Html.TextBoxFor(model => model.oFieldAssessmentViewModel.FileDescription, new { @class = "form-control", @maxlength = "200" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="picLocFile" type="submit" class="btn btn-sm btn-primary">Save</button>
                    <button type="submit" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        }
    </div>

</div>
<!-- END MODAL FORM -->

@section scripts {
    <script src="~/js/confirm_delete.js">
    </script>   
    <script type="text/javascript">
        $(document).ready(function () {
            $('.descinfo').click(function () {
                var dad = $(this).parent();
                dad.find("#divHideOnEdit").hide();
                dad.find("#divShowOnEdit").show().focus();
                return false;
            });

            $('.activity').click(function () {
                var dad = $(this).parent();
                dad.find("#divPhotoHideOnEdit").hide();
                dad.find("#divPhotoShowOnEdit").show().focus();
                return false;
            });
            // get date from MyDate input field
            var date = $("#date").val();

            // use current date as default, if input is empty
            if (!date) {
                date = new Date();
            }

            $('#date').datepicker({
                changeMonth: true,
                changeYear: true,
                format: "mm-dd-yyyy",
                language: "tr",
                autoclose: true,
                todayBtn: 'linked'
            });
            // get date from MyDate input field
            var dateAssessment = $("#dateAssessment").val();

            // use current date as default, if input is empty
            if (!dateAssessment) {
                dateAssessment = new Date();

            }
            $('#dateAssessment').datepicker({
                changeMonth: true,
                changeYear: true,
                format: "mm-dd-yyyy",
                language: "tr",
                autoclose: true,
                todayBtn: 'linked'

            });

        });
    </script>
}

