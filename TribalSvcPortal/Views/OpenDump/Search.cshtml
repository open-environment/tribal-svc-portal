@model TribalSvcPortal.ViewModels.OpenDumpViewModels.SearchViewModel
@{
    ViewBag.Title = "Search Open Dumps";
    ViewBag.SubTitle = "Search and view open dump records.";
}

<!-- *********************** START FILTER ****************************************** -->
@using (Html.BeginForm("Search", "OpenDump", FormMethod.Get, new { @class = "" }))
{
    <div class="row aligned-row">
        <section class="col-md-12 col-sm-12 col-xs-12 ">
            <section class="panel panel-default">
                <div class="panel-heading">
                    Filters
                    <div class="panel-tools">
                        <a class="btn btn-xs panel-collapse collapses" href="#">
                        </a>
                    </div>
                </div>
                <div class="panel-body">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Search:</label>
                                @Html.TextBoxFor(model => model.selStr, new { @class = "form-control", @placeholder = "Search site name or address" })
                            </div>
                        </div>
                        @*<div class="col-md-6">
                                <div class="form-group">
                                    <label>Status:</label>
                                    @Html.DropDownListFor(model => model.selStatus, Model.ddl_Status, "", new { @class = "form-control" })
                                </div>
                            </div>*@
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Organization:</label>
                                @Html.DropDownListFor(model => model.selOrg, Model.ddl_Org, "", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button class="btn btn-success" type="submit">
                                <i class="clip-search-2"> </i>Search
                            </button>
                        </div>
                    </div>
                </div>
            </section>
        </section>
    </div>
}

<!-- *********************** START TABS ****************************************** -->
<div id="tabs" class="tabbable">
    <ul id="myTab" class="nav nav-tabs tab-blue">
        <li class="active tooltips" style="line-height: 22px; font-size: 22px;" data-rel="tooltip" data-original-title="List View">
            <a href="#tabList" data-toggle="tab">
                <i id="entHelp" class="clip-list help-icon color-eecip"></i>
            </a>
        </li>
        <li class="tooltips" style="line-height: 22px; font-size: 22px;" data-rel="tooltip" data-original-title="Map View">
            <a href="#tabMap" data-toggle="tab">
                <i id="entHelp" class="clip-earth help-icon color-eecip"></i>
            </a>
        </li>
        <li class="pull-right">
            <a href="@Url.Action("PreField", "OpenDump", new { selOrg = Model.selOrg, returnURL = "Search" })" class="btn btn-rounded btn-success"
               style="color: #fff;background-color: #5cb85c;border-color: #4cae4c;border-radius: 4px !important;"><i class="glyphicon glyphicon-plus"></i>Add New</a>
        </li>
    </ul>

    <!--  ************************************** TAB CONTENT *********************************************************-->
    <div class="tab-content">
        <div class="tab-pane in active" id="tabList">
            <div class="table-responsive">
                <table class="table table-striped m-b-none" data-ride="datatables">
                    <thead>
                        <tr class="thead-inverse">
                            <th style="min-width:70px"></th>
                            <th>Site Name</th>
                            <th>Site Address</th>
                            <th>Reported By</th>
                            <th>Reported On</th>
                        </tr>
                    </thead>
                    @if (Model.searchResults != null)
                    {
                        @foreach (var item in Model.searchResults)
                        {
                            <tr>
                                <td style="min-width:65px">
                                    <a href="@Url.Action("PreField", "OpenDump", new { SiteIdx = item.Site_Idx, selOrg = Model.selOrg, returnURL = "Search" })" class="btn btn-rounded btn-xs btn-info"><i class="glyphicon glyphicon-pencil"></i></a>
                                    <div class="delete-section" style="display:inline">
                                        <a class=" btn btn-rounded btn-xs btn-danger delete-link"><i class="glyphicon glyphicon-remove"></i></a>
                                        <div class="btn btn-rounded btn-xs btn-warning delete-confirm" style="display:none" data-delete-id="@item.Site_Idx" data-delete-p="/OpenDump/PreFieldDelete"><b>Confirm Delete</b></div>
                                    </div>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SiteName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.SiteAddress)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReportedBy)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReportedOn)
                                </td>

                            </tr>
                        }
                    }

                </table>
            </div>

        </div>
        <div class="tab-pane" id="tabMap" style="width:100%;height:100%;">

        </div>
    </div>
</div>
<!-- *********************** END TABS ****************************************** -->
@section scripts {
    <script src="~/js/confirm_delete.js">
    </script>
    <style>
        div.esriPopupWrapper .zoomTo {
            display: none;
        }
    </style>
    @if (Model.searchResults != null)
    {
        <script type="text/javascript">

            LoadMap(JSON.parse('@Html.Raw(Json.Serialize(@Model.searchResults))'));

            function LoadMap(searchList)
            {
                var map, tb;

                require(["esri/map",
                    "esri/InfoTemplate",
                    "esri/geometry/Point",
                    "esri/toolbars/draw",
                    "esri/symbols/SimpleMarkerSymbol",
                    "esri/symbols/SimpleLineSymbol",
                    "esri/symbols/PictureFillSymbol",
                    "esri/symbols/CartographicLineSymbol",
                    "esri/graphic",
                    "esri/layers/GraphicsLayer",
                    "esri/graphicsUtils",
                    "esri/Color", "dojo/dom", "dojo/on", "dojo/domReady!"
                ],

                    function (
                        Map, InfoTemplate,
                        Point,
                        Draw,
                        SimpleMarkerSymbol, SimpleLineSymbol,
                        PictureFillSymbol, CartographicLineSymbol,
                        Graphic, GraphicsLayer, graphicsUtils,
                        Color, dom, on
                    ) {
                        map = new Map("tabMap", {
                            basemap: "gray",
                            center: [-42.1737, 69.6354],
                            zoom: 2
                        });

                map.on("load", initOperationalLayer);

                        function initOperationalLayer() {

                            var s = new SimpleMarkerSymbol().setStyle(SimpleMarkerSymbol.STYLE_SQUARE).setColor(new Color([255, 0, 0, 2]));

                            var gl = new GraphicsLayer();
                            map.addLayer(gl);

                            for (var count = 0; count < searchList.length; count++) {
                                var p = new Point(searchList[count].longitude, searchList[count].latitude);
                                var i = {
                                    x: searchList[count].longitude, y: searchList[count].latitude, SiteName: searchList[count].siteName,
                                    SiteAddress: searchList[count].siteAddress, ReportedBy: searchList[count].reportedBy, ReportedOn: searchList[count].reportedOn,
                                    Goto: "<a href='PreField?SiteIdx=" + searchList[count].site_Idx + "&returnURL=Search'" + "> Edit</a>"
                                };
                                var siteid = searchList[count].siteAddress;
                                var it = new InfoTemplate("Coordinates");
                                var g = new Graphic(p, s, i).setInfoTemplate(it);
                                gl.add(g);
                            }
                        }                     
             });

          }
        </script>
    }

}

