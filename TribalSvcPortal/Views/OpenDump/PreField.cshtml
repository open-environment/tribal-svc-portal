@model TribalSvcPortal.ViewModels.OpenDumpViewModels.OpenDumpViewModel
@using TribalSvcPortal.ViewModels.OpenDumpViewModels;
@{
    ViewBag.SubTitle = "";
    ViewBag.Title = "";

}
<link rel="stylesheet" href="https://js.arcgis.com/3.25/esri/css/esri.css">
<!-- render the main content -->
<div class="row">
    <div class="col-sm-12">

        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.oPreFieldViewModel.TPrtSites.SiteIdx)
        @Html.HiddenFor(model => model.oPreFieldViewModel.selOrg)
        @Html.HiddenFor(model => model.oPreFieldViewModel.returnURL)
        @Html.HiddenFor(model => model.oPreFieldViewModel.activeTab)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="job_details_div" class="@Html.Raw("col-sm-12"))" style="margin-top:10px;margin-top:10px;">
            <!-- *********************** START TABS ****************************************** -->
            <div id="tabs" class="tabbable">
                <ul id="myTab" class="nav nav-tabs tab-blue">
                    <li class="@(Model.ActiveTab == OpenDumpTab.Prefield  ? "active" : "")">
                        <a href="#tab1" data-toggle="tab">
                            Pre-Field
                        </a>
                    </li>
                    <li class="@(Model.ActiveTab == OpenDumpTab.FieldAssessment  ? "active" : "")">
                        <a href="#tab2" data-toggle="tab">
                            Field Assessments
                        </a>
                    </li>
                    <li>
                        <a href="#tab3" data-toggle="tab">
                            Waste Profile/Health Threat
                        </a>
                    </li>
                    <li>
                        <a href="#tab5" data-toggle="tab">
                            Site Cleanup
                        </a>
                    </li>
                </ul>
                <div class="tab-content" style="height:0px; padding: 0px;">
                    @*<div class="tab-pane in active" id="tab1">*@
                    <div class="@(Model.ActiveTab == OpenDumpTab.Prefield  ? "tab-pane in active" : "tab-pane")" id="tab1">
                        @await Component.InvokeAsync("PreField", new { SiteIdx = Model.oPreFieldViewModel.TPrtSites.SiteIdx, returnURL = Model.oPreFieldViewModel.returnURL })

                    </div>
                    <div class="@(Model.ActiveTab == OpenDumpTab.FieldAssessment  ? "tab-pane in active" : "tab-pane")" id="tab2">
                        @*@{ Html.RenderPartial("_FieldAssessments", Model.oFieldAssessmentViewModel); }*@
                        @await Component.InvokeAsync("FieldAssessments", new { SiteIdx = Model.oPreFieldViewModel.TPrtSites.SiteIdx, AssessmentIdx = Model.oFieldAssessmentViewModel.TOdDumpAssessments?.DUMP_ASSESSMENTS_IDX })
                    </div>
                    <div class="tab-pane" id="tab3">
                    </div>
                    <div class="tab-pane" id="tab4">
                    </div>
                    <div class="tab-pane" id="tab5">
                    </div>
                </div>
            </div>
            <!-- *********************** END TABS ****************************************** -->
        </div>
    </div>
</div>
@section scripts {
    <script src="~/js/confirm_delete.js">
    </script>
    <script src="https://js.arcgis.com/3.25/"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            // get date from MyDate input field
            var date = $("#date").val();

            // use current date as default, if input is empty
            if (!date) {
                date = new Date();
              //  $("#date").val() = new Date();
            }

            $('#date').datepicker({
                changeMonth: true,
                changeYear: true,
                format: "dd-mm-yyyy",
                language: "tr",
                autoclose: true,
                todayBtn: 'linked'
            });
            // get date from MyDate input field
            var dateAssessments = $("#dateAssessment").val();

            // use current date as default, if input is empty
            if (!dateAssessments) {
                dateAssessments = new Date();
                $("#dateAssessment").val(dateAssessments);

            }
            $('#dateAssessment').datepicker({
                changeMonth: true,
                changeYear: true,
                format: "dd-mm-yyyy",
                language: "tr",
                autoclose: true,
                todayBtn: 'linked'
            });

        });

        function GetAssessment(value) {
            if (@Model.oFieldAssessmentViewModel.TPrtSites != null) {
                var siteIndx = "@Model.oFieldAssessmentViewModel.TPrtSites?.SiteIdx";
                window.location.href = "/OpenDump/FieldAssessments?AssessmentIdx=" + value + "&SiteIdx=" + siteIndx;

            }
        }
    </script>
    @if (Model.oPreFieldViewModel.TPrtSites != null)
    {
        <script type="text/javascript">

            LoadMap(JSON.parse('@Html.Raw(Json.Serialize(@Model.oPreFieldViewModel.TPrtSites))'));
            function LoadMap(searchList)
            {
                var map, tb;

                require(["esri/map",
                    "esri/InfoTemplate",
                    "esri/geometry/Point",
                    "esri/toolbars/draw",
                    "esri/symbols/SimpleMarkerSymbol",
                    "esri/symbols/SimpleLineSymbol",
                    "esri/symbols/PictureFillSymbol",
                    "esri/symbols/CartographicLineSymbol",
                    "esri/graphic",
                    "esri/layers/GraphicsLayer",
                    "esri/graphicsUtils",
                    "esri/Color", "dojo/dom", "dojo/on", "dojo/domReady!"
                ],

                    function (
                        Map, InfoTemplate,
                        Point,
                        Draw,
                        SimpleMarkerSymbol, SimpleLineSymbol,
                        PictureFillSymbol, CartographicLineSymbol,
                        Graphic, GraphicsLayer, graphicsUtils,
                        Color, dom, on
                    ) {
                        map = new Map(document.getElementById("map_canvas"), {
                            basemap: "gray",
                            center: [-42.1737, 69.6354],
                            zoom: 2
                        });


                map.on("load", initOperationalLayer);
                        function initOperationalLayer() {

                            var s = new SimpleMarkerSymbol().setStyle(SimpleMarkerSymbol.STYLE_SQUARE).setColor(new Color([255, 0, 0, 2]));
                            var latitude = searchList.latitude;
                            var longitude = searchList.longitude;
                            var p = new Point(searchList.longitude, searchList.latitude);
                            var i = { x: searchList.longitude, y: searchList.latitude };
                            map.graphics.clear();
                            map.graphics.add(new Graphic(p, s));
                            if (latitude != null && longitude != null) {
                            map.infoWindow.setTitle("Coordinates");
                                map.infoWindow.setContent(
                                    "Latitude: " + latitude +
                                    "<br>Longitude:" + longitude
                                );
                                map.infoWindow.show(p, i);
                            }
                        }
                        map.on("click", addPoint);
                        function addPoint(evt) {
                            var s = new SimpleMarkerSymbol().setStyle(SimpleMarkerSymbol.STYLE_SQUARE).setColor(new Color([255, 0, 0, 2]));
                            var latitude = evt.mapPoint.getLatitude();
                            var longitude = evt.mapPoint.getLongitude();
                            map.graphics.clear();
                            map.graphics.add(new Graphic(evt.mapPoint, s));
                            map.infoWindow.setTitle("Coordinates");
                            map.infoWindow.setContent(
                                "Latitude: " + latitude.toFixed(5) +
                                "<br>Longitude:" + longitude.toFixed(5)
                            );
                            map.infoWindow.show(evt.mapPoint, map.getInfoWindowAnchor(evt.screenPoint));

                            document.getElementById("latitude").value = latitude.toFixed(5);
                            document.getElementById("longitude").value = longitude.toFixed(5);

                        }
                        $('#myModal').on('show.bs.modal', function (event) {
                            $("#map_canvas").css("width", "100%");
                        });

             });

            }
        </script>
    }
}
