@using TribalSvcPortal.AppLogic.BusinessLogicLayer
@model TribalSvcPortal.ViewModels.OpenDumpViewModels.AssessmentDetailViewModel

<div id="tabs" class="tabbable">
    <ul id="myTab" class="nav nav-tabs tab-blue">
        <li>
            <a href="@Url.Action("PreField", "OpenDump", new { id = Model.Assessment.SITE_IDX })">
                Pre-Field
            </a>
        </li>
        <li class="active">
            <a href="#tab2" data-toggle="tab">
                Field Assessments
            </a>
        </li>
        <li>
            <a href="@Url.Action("WasteProfile", "OpenDump", new { id = Model.Assessment.ASSESSMENT_IDX })">
                Waste Profile/Health Threat
            </a>
        </li>
        <li>
            <a href="@Url.Action("WasteContent", "OpenDump", new { id = Model.Assessment.ASSESSMENT_IDX })">
                Waste Contents
            </a>
        </li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane in active" id="tab2">
            <!-- render the main content -->
            <div class="row">
                <div class="col-xs-6 col-sm-4 col-md-4">
                    <h4>@Model.SiteName</h4>
                </div>
                <div class="col-xs-6 col-sm-4 col-md-4">
                    <h4>@Model.OrgName</h4>
                </div>
                <div class="col-xs-12 col-md-4 col-sm-4 pull-right">
                    <div class="btn-group pull-right">
                        @if (Model.Assessment.ASSESSMENT_IDX != Guid.Empty)
                        {
                            <a href="#" data-toggle="dropdown" class="btn btn-primary dropdown-toggle" aria-expanded="false">
                                Change Assessment <span class="caret"></span>
                            </a>
                            <ul class="dropdown-menu" role="menu">
                                @foreach (var item1 in Model.ddl_Assessments)
                                {
                                    <li>
                                        <a href="@Url.Action("AssessmentDetails", "OpenDump", new { id = item1.Value })">
                                            @item1.Text
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    <a href="@Url.Action("Assessments", "OpenDump", new { id = Model.Assessment.SITE_IDX })" class="btn btn-primary pull-right tooltips" style="margin-left:10px; margin-right:10px"
                       data-original-title="Return to list of assessments" data-placement="bottom">
                        <i class="clip-list"></i>
                    </a>
                </div>
            </div>

            @using (Html.BeginForm("AssessmentDetails", "OpenDump", FormMethod.Post, new { @id = "norepostform" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Assessment.ASSESSMENT_IDX)
                @Html.HiddenFor(model => model.Assessment.SITE_IDX)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <section class="panel panel-default">
                    <div class="panel-heading">
                        Assessment Details
                        <div class="panel-tools">
                            <a class="btn btn-xs panel-collapse collapses" href="#"></a>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Date of Assessment</label>
                                    @Html.TextBoxFor(model => model.Assessment.ASSESSMENT_DT, "{0:MM/dd/yyyy}", new { @autocomplete="off", @class = "form-control", required = "required" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Assessed By</label>
                                    @Html.TextBoxFor(model => model.Assessment.ASSESSED_BY, new { @class = "form-control", @placeholder = "", @maxlength = "450" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Assessment Type</label>
                                    @Html.DropDownListFor(model => model.Assessment.ASSESSMENT_TYPE_IDX, Model.ddl_AssessmentTypeList, "", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Site Status</label>
                                    @Html.DropDownListFor(model => model.Assessment.CURRENT_SITE_STATUS, Model.ddl_SiteStatus, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Cleaned/Closed Date</label>
                                    @Html.TextBoxFor(model => model.Assessment.CLEANED_CLOSED_DT, "{0:MM/dd/yyyy}", new { @autocomplete = "off", @class = "form-control datepicker" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Site Description</label>
                                    @Html.TextAreaFor(model => model.Assessment.SITE_DESCRIPTION, new { @class = "form-control", @placeholder = "" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Observations / Notes</label>
                                    @Html.TextAreaFor(model => model.Assessment.ASSESSMENT_NOTES, new { @class = "form-control", @placeholder = "" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <button type="submit" name="submitButton" value="Save" class="btn btn-eecip">Save</button>
                            </div>
                        </div>
                    </div>
                </section>
            }

            @if (Model.Assessment != null && Model.Assessment.ASSESSMENT_IDX != Guid.Empty)
            {
                <div class="row">
                    <div class="col-md-6">
                        <section class="panel panel-default">
                            <div class="panel-heading">
                                Assessment Pictures
                                <div class="panel-tools">
                                    <a class="btn btn-xs panel-collapse collapses" href="#"></a>
                                </div>
                            </div>
                            <div class="panel-body">

                                @if (Model.filesPhoto_existing != null && Model.filesPhoto_existing.Count > 0)
                                {
                                    <div class="row">

                                        @foreach (var file in Model.filesPhoto_existing)
                                        {
                                            <div class="publicbadge col-md-4 col-sm-4 col-xs-4">
                                                <div class="circle-tile-heading" style="display:inline-grid; background-image:url(@Url.Action("ViewImage", "OpenDump", new {id  = file.DOC_IDX }))">
                                                </div>
                                                <div class="publicbadgenamedesc">
                                                    @Html.DisplayFor(modelItem => file.DOC_NAME)
                                                </div>
                                                <div class="publicbadgeawards">
                                                    @Html.DisplayFor(modelItem => file.DOC_COMMENT)
                                                </div>

                                                <a class="fileupload" href="@Url.Action("FileDownload", "OpenDump", new { id = file.DOC_IDX })">
                                                    <span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span>
                                                </a>
                                                <a href="@Url.Action("FileDelete", "OpenDump", new { id = file.DOC_IDX, returnIDX = Model.Assessment.ASSESSMENT_IDX, returnAction="AssessmentDetails" })" class="deleteupload text-red"  title="Delete">
                                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                                </a>
                                                @*<a href="#" class="btn btn-rounded btn-xs activity" title="Edit">
                                                    <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i>
                                                    </a>*@
                                            </div>
                                        }
                                    </div>

                                }
                                <div class="row">
                                    <div class="col-md-12">
                                        <a id="add-it" href="#modal-formPhoto" data-toggle="modal" class="add-it btn btn-eecip">
                                            <i class="glyphicon glyphicon-plus"></i> Add Photo
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                    <div class="col-md-6">
                        <section class="panel panel-default" >
                            <div class="panel-heading">
                                Other Files
                                <div class="panel-tools">
                                    <a class="btn btn-xs panel-collapse collapses" href="#"></a>
                                </div>
                            </div>
                            <div class="panel-body">

                                @if (Model.files_existing != null && Model.files_existing.Count > 0)
                                {
                                <div class="row">

                                    @foreach (var file in Model.files_existing)
                                    {
                                        <div class="publicbadge col-md-4 col-sm-4 col-xs-4">
                                            <div class="circle-tile-heading" style="color: #555; padding-top: 65px; text-align: center; font-size: 20px;">
                                                <i class="glyphicon glyphicon-file"></i><br />
                                                @Html.DisplayFor(modelItem => file.DOC_NAME)
                                            </div>
                                            <div class="publicbadgeawards">
                                                @Html.DisplayFor(modelItem => file.DOC_COMMENT)
                                            </div>

                                            <a class="fileupload" href="@Url.Action("FileDownload", "OpenDump", new { id = file.DOC_IDX })">
                                                <span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span>
                                            </a>
                                            <a href="@Url.Action("FileDelete", "OpenDump", new { id = file.DOC_IDX, returnIDX = Model.Assessment.ASSESSMENT_IDX, returnAction="AssessmentDetails" })" class="deleteupload text-red" title="Delete">
                                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                            </a>
                                            @*<a href="#" class="btn btn-rounded btn-xs activity" title="Edit">
                <i class="glyphicon glyphicon-pencil" aria-hidden="true"></i>
                </a>*@
                                        </div>
                                    }

                                </div>
                                }
                                <div class="row">
                                    <div class="col-md-12">
                                        <a id="add-it" href="#modal-formPhoto" data-toggle="modal" class="add-it btn btn-eecip">
                                            <i class="glyphicon glyphicon-plus"></i> Add File
                                        </a>
                                    </div>
                                </div>

                            </div>
                        </section>
                    </div>
                </div>
            }


        </div>
    </div>
</div>



<!-- START MODAL FORMS  -->
<div class="modal fade" id="modal-formPhoto" style="display: none;" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 style="float: left" class="modal-title">Add Photo</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            @using (Html.BeginForm("PhotoUpload", "OpenDump", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Assessment.SITE_IDX)
                @Html.HiddenFor(model => model.Assessment.ASSESSMENT_IDX)

            <div class="modal-body">
                <div class="form-group">
                    Upload Photo
                    <div class="input-group">
                        <label for="file-upload" class="custom-file-upload btn btn-eecip">
                            <i class="glyphicon glyphicon-cloud-upload"></i> Upload File
                        </label>
                        <span id="file-selected"></span>
                        @Html.EditorFor(model => model.filesPhoto, new { htmlAttributes = new { @id = "file-upload", @class = "form-control", @type = "file" } })
                        @*<input id="file-upload" type="file" />*@
                    </div>
                </div>
                <div class="form-group">
                    <label>Description</label>
                    @Html.TextBoxFor(model => model.FilePhotoDescription, new { @class = "form-control", @maxlength = "200" })
                </div>
            </div>
                <div class="modal-footer">
                    <button id="picLoc" type="submit" class="btn btn-sm btn-eecip">Save</button>
                    <button type="submit" class="btn btn-sm btn-default" data-dismiss="modal">Cancel</button>
                </div>
            }
        </div>

    </div>
</div>
<!-- END MODAL FORMS -->


@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            //date pickers
            datepicker('#Assessment_ASSESSMENT_DT', {
                formatter: (input, date, instance) => {
                    const value = date.toLocaleDateString()
                    input.value = value // => '1/1/2099'
                }
            });

            datepicker('#Assessment_CLEANED_CLOSED_DT', {
                formatter: (input, date, instance) => {
                    const value = date.toLocaleDateString()
                    input.value = value // => '1/1/2099'
                }
            });

            //photo/document upload
            $('#file-upload').bind('change', function () {
                var fileName = '';
                fileName = $(this).val();
                $('#file-selected').html(fileName.replace(/^.*\\/, ""));
            })

        });
    </script>
}

